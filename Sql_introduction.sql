#DATABASE 
#A DATABASE IS A COLLECTION OF DATA THAT IS TYPICALLY STORED ELECTRONICALLY IN A COMPUTER SYSTEM
#A DATABASE IS USUALLY CONTROLLED BY A DATABASE MANAGEMENT SYSTEM.
#POPULAR DATABASES MYSQL, ORACLE DATABASE,MONGO DB, CASSANDRA, MS SQL SERVER
#DBMS IS A SOFTWARE THAT HELPS USERS TO CREATE, MAINTAIN AND ORGANIZE DATA IN A STRUCTURED MANNER

#SQL(Structured query language)
#SQL IS THE LANGUAGE THAT IS USED TO COMMUNICATE WITH DATABASES
#SQL was initially developed by IBM.
#SQL IS USED TO PERFORM C.R.U.D OPERATIONS
# CAN BE USED AS A CLIENT SERVER LANGUAGE TO CONNECT FRONT END WITH BACK END
#SQL WHEN DEPLOYED AS DCL PROTECTS YOUR DATABASE FROM UNAUTHORIZED ACCESS

#FEATURES OF SQL
#sQL lets you access data in relational data bases.
#SQL is fast in retreiving large amount of data very efficiently.
#SQL is versaltile as it works with all database systems like microsoft, oracle,IBM etc
#SQL helps to manage databases


#SQL COMMANDS 

#DDL---CREATE, ALTER, DROP, TRUNCATE
 #DDL COMMANDS CHANGES THE STRUCTURE OF THE TABLE
 #DDL COMMANDS ARE AUTO COMMITED IT MEANS IT PERMANANLY SAVES ALL THE CHANGES IN THE DATABASE.
#DML---SELECT(DQL), UPDATE,DELETE, INSERT 
 #USED TO MODIFY DATABASE, THESE COMMANDS WONT MAKE PERMANENT CHANGES IN DATABASE
 #SELECT COMMAND IS ALSO REFERRED TO AS DQL COMMAND.
#DCL---GRANT, REVOKE 
 #ALLOW YOU TO CONTROLL ACCESS TO DATA WITHIN THE DATABSE AND CONTROLL PRIVILAGES AMONG USER ACCESS 
#TCL---COMMIT, ROLLBACK()
 #ALLOWS THE USER TO MANAGE DATABASE TRANSACTIONS
#DQL---USED TO QUERY THE DATABASE FOR INFOMATION
-- -------------------------------------------------------------------------------
# ER DIAGRAM (ENTITY RELATIONSHIP DIAGRAM)

#ER DIAGRAM IS A STRUCTURAL DESIGN OF DATABASE
#IT DESCRIBES THE RELATIONSHIP BETWEEN ENTITES THAT NEEDS TO BE STORED IN DATABASES.
#ER DIAGRAM IS CREATED BASED ON THREE COMPONENTS ENTITES, ATTRIBUTES, RELATIONSHIPS 
#iT GIVES THE BETTER UNDERSTANDING OF INFORMATION TO BE STORED IN A DATABASE 
#IT REDUCES THE COMPLEXITY AND SAVES TIME

-- RECTANGLE ------ ENTITY (STUDENT, COURSE)
-- DOUBLE RECTANGLE ---- WEAK ENTITY
-- DIAMOND   ------- RELATIONSHIP
-- OVAL      ------- ATTRIBUTES(STUDENT_ID, COURSE_ID)
-- DASHED OVAL      ---- DERIVED ATTRIBUTE
-- DOUBLE OVAL --------- MULTIVALUED ATTRIBUTE

#AN ENTITY IS A LIVING OR NON LIVING COMPONENT REPRESENTED BY RECTANGLE
#AN ENTITY THAT RELIES OVER ANOTHER ENTITY IS A WEAK ENTITY
#SCHOOL ENTITY WITH A SCHOOL NUMBER IS A STRONG ENTITY. PRIMARY KEY IS NOT DERIVED
#CLASSROOM IS A WEEK ENTITY CAUSE THE ROOM NO IS A DESCRIMINATOR BUT NOT A PRIMARY KEY. 
 #HERE PRIMARY KEY IS PARTIALLY OR FULLY DERIVED

#AN ATTRIBUTE DESCRIBES PROPERTY OF AN ENTITY 
	#KEY ATTRIBUTE - UNIQUELY IDENTIFIES AN ATTRIBUTE IN AN ENTITY SET BY UNDERLINE
	#COMPOSITE ATTRIBUTE - ATTRIBUTE COMPOSED OF SEVERAL OTHER ATTRIBUTES. 
      #IT IS REPRESENTED WITH OVAL AND THAT OVAL IS FURTHER CONNECTED TO OTHER OVALS
	#DERIVED ATTRIBUTE - AN ATTRIBUTE THAT CAN BE DERIVED FROM OTHER ATTRIBUTES OF ENTITY. REPRESENTED BY DASHED OVAL
	#MULTIVALUED ATTRIBUTE - AN ATTRIBUTE THAT CAN POSSESS MORE THAN ONE value

#RELATIONSHIP - SHOWS THE RELATIONSHIP AMONG ENTITES
	#ONE TO ONE RELATIONSHIP - WHEN SINGLE ELEMENT OF AN ENTITY IS ASSOCIATED WITH SINGLE ELEMENT OF ANOTHER ENTITY
    #ONE TO MANY - SINGLE ELEMENT IS ASSOSIATED WITH MORE THAN ONE ELEMENTS OF ANOTHER ENTITY
	#MANY TO ONE
    #MANY TO MANY - ONE STUDENT CAN CHOOSE MUTIPLE COURSES AND ONE COURSE CAN BE CHOSEN BY MULTIPLE STUDENTS
	
-- -------------------------------------------------------------
#CRUD --CREATE, RETREVE, UPDATE AND DELETE

#RELATIONAL DATABASES ORANIZES DATA INTO TABLES. EACH TABLE HAS COLUMNS AND ROWS
#A UNIQUE KEY IDENTIDIES EACH ROW
#SQL IS THE LANGUAGE USED TO INTERACT WITH RDBMS
#A NON RELATIONAL DATABASE DOESN'T USE A TABULAR SCHEMA OF ROWS AND COLUMNS.
#HERE THE VALUES ARE STORED IN THE FORM OF KEY-VALUES, DOCUMENTS, GRAPHS 

-- --------------------------------------------------------------------------
#C.R.U.D COMMANDS
#CREATE TABLE STUDENT(, , , , );
#DESCRIBE TABLE;
#DROP TABLE STUDENT;
#ALTER TABLE STUDENT ADD GPA DECIMAL(3,2); TO ADD NEW COLUMN
#ALTER TABLE STUDENT DROP GPA;              TO DELETE COLUMN
#HERE WE ARE MANIPULATING TABLE SCHEMA OR COLUMNS OF TABLE

#INSERT INTO STUDENT VALUES(,,,,,); 
#SELECT * FROM STUDENT
#CONSTRAINS
#UPDATE STUDENT SET MAJOR = "BIOLOGY"    -- CHANGES MAJOR OF ALL STUDENTS TO BIOLOGY
#UPDATE STUDENT SET MAJOR = "MATHS" WHERE MAJOR = "PHYSICS";  -- CHANGES FROM PHY TO MATH
#DELETE FROM STUDENT;  -- THIS WILL DELETE ALL ROWS IN THE TABLE
#DELETE FROM STUDENT WHERE STUDENT_ID = 5;  -- DELETES THE ROW WITH STUDENT_ID = 5
#ALTER TABLE table_name RENAME column old_column TO new_column;  --to rename a column


 